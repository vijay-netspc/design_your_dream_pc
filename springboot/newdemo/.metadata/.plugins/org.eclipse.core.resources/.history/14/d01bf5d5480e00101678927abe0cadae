<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PC Builder</title>
    <script>
        // Function to fetch all builds and display them
        function getAllBuilds() {
            fetch('/api/pcbuilds/')
                .then(response => response.json())
                .then(data => {
                    let buildList = document.getElementById("buildList");
                    buildList.innerHTML = "";
                    data.forEach(build => {
                        let li = document.createElement("li");
                        li.textContent = `${build.name} - ${build.processor}`;
                        let deleteButton = document.createElement("button");
                        deleteButton.textContent = "Delete";
                        deleteButton.onclick = () => deleteBuild(build.id);
                        li.appendChild(deleteButton);
                        buildList.appendChild(li);
                    });
                })
                .catch(error => console.error('Error fetching builds:', error));
        }

        // Function to add a new build
        function addBuild() {
            const name = document.getElementById("name").value;
            const processor = document.getElementById("processor").value;
            const graphicsCard = document.getElementById("graphicsCard").value;
            const memory = document.getElementById("memory").value;
            const storage = document.getElementById("storage").value;
            const powerSupply = document.getElementById("powerSupply").value;

            const newBuild = {
                name: name,
                processor: processor,
                graphicsCard: graphicsCard,
                memory: memory,
                storage: storage,
                powerSupply: powerSupply
            };

            fetch('/api/pcbuilds/', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newBuild)
            })
            .then(response => response.json())
            .then(data => {
                alert('Build added!');
                getAllBuilds();  // Refresh the list of builds
            })
            .catch(error => console.error('Error adding build:', error));
        }

        // Function to delete a build
        function deleteBuild(id) {
            fetch(`/api/pcbuilds/${id}`, {
                method: 'DELETE'
            })
            .then(response => response.text())
            .then(data => {
                alert(data);
                getAllBuilds();  // Refresh the list of builds
            })
            .catch(error => console.error('Error deleting build:', error));
        }

        // Call getAllBuilds() when the page loads
        window.onload = getAllBuilds;
    </script>
</head>
<body>

    <h1>PC Builder</h1>

    <!-- Form to add a new build -->
    <h2>Add New Build</h2>
    <form id="addBuildForm" onsubmit="event.preventDefault(); addBuild();">
        <label>Name:</label><br>
        <input type="text" id="name" required><br><br>

        <label>Processor:</label><br>
        <input type="text" id="processor" required><br><br>

        <label>Graphics Card:</label><br>
        <input type="text" id="graphicsCard" required><br><br>

        <label>Memory:</label><br>
        <input type="text" id="memory" required><br><br>

        <label>Storage:</label><br>
        <input type="text" id="storage" required><br><br>

        <label>Power Supply:</label><br>
        <input type="text" id="powerSupply" required><br><br>

        <button type="submit">Add Build</button>
    </form>

    <h2>All Builds</h2>
    <ul id="buildList">
        <!-- List of builds will be populated here -->
    </ul>

</body>
</html>
